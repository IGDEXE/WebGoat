# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main


pool:
  vmImage: 'ubuntu-latest'

variables:
  veracodeAppProfile: PP_DEMO.$(Build.DefinitionName)
  caminhoPacote: '$(build.artifactstagingdirectory)/JARs'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-DskipTests'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
  displayName: 'Build'

- task: CopyFiles@2
  inputs:
    Contents: '**/**.jar'
    TargetFolder: '$(caminhoPacote)'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      find -type f -name "*.war"
      cd $(caminhoPacote)
      find -type f -name "*.jar"

- script: |
    curl -O -L https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
  displayName: 'Download Pipeline Scanner'
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: 'pipeline-scan-LATEST.zip'
    destinationFolder: '$(Build.ArtifactStagingDirectory)'
    cleanDestinationFolder: false
- script: |
      java -Dpipeline.debug=true -jar $(Build.ArtifactStagingDirectory)/pipeline-scan.jar -vid $(APIID) -vkey $(APIKEY) --file '$(caminhoPacote)' --issue_details true 
  displayName: 'Veracode PipelineScan'
  continueOnError: true

- task: CmdLine@2
  inputs:
    script: |
      export SRCCLR_SCM_NAME=$(veracodeAppProfile)
      curl -sSL https://download.sourceclear.com/ci.sh | bash -s â€“ scan --update-advisor --allow-dirty
  displayName: 'Veracode SCA'
  continueOnError: true
  
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '$(APIID)'
    apiKey: '$(APIKEY)'
    veracodeAppProfile: '$(veracodeAppProfile)'
    version: '$(build.buildNumber)'
    filepath: '$(caminhoPacote)'
    createSandBox: false
    createProfile: true
    failTheBuildIfVeracodeScanDidNotInitiate: false
    scanStatusCheckInterval: '60'
    importResults: true
    failBuildOnPolicyFail: false
  displayName: 'Veracode SAST'

- task: Veracode Flaw Importer@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '$(APIID)'
    apiKey: '$(APIKEY)'
    veracodeAppProfile: '$(veracodeAppProfile)'
    sandboxName: 
    importType: 'All Flaws'
    workItemType: 'Issue'
    area: '$(system.teamProject)'
    flawImportLimit: '1000'
  displayName: 'Veracode importando falhas'